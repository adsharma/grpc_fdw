use crate::client::pg::*;
use pgx::*;

impl From<pgx::PgBuiltInOids> for Oid {
    fn from(oid: PgBuiltInOids) -> Self {
        match oid {
            PgBuiltInOids::BOOLOID => Oid::Booloid,
            PgBuiltInOids::BYTEAOID => Oid::Byteaoid,
            PgBuiltInOids::CHAROID => Oid::Charoid,
            PgBuiltInOids::NAMEOID => Oid::Nameoid,
            PgBuiltInOids::INT8OID => Oid::Int8oid,
            PgBuiltInOids::INT2OID => Oid::Int2oid,
            PgBuiltInOids::INT2VECTOROID => Oid::Int2vectoroid,
            PgBuiltInOids::INT4OID => Oid::Int4oid,
            PgBuiltInOids::REGPROCOID => Oid::Regprocoid,
            PgBuiltInOids::TEXTOID => Oid::Textoid,
            PgBuiltInOids::OIDOID => Oid::Oidoid,
            PgBuiltInOids::TIDOID => Oid::Tidoid,
            PgBuiltInOids::XIDOID => Oid::Xidoid,
            PgBuiltInOids::CIDOID => Oid::Cidoid,
            PgBuiltInOids::OIDVECTOROID => Oid::Oidvectoroid,
            PgBuiltInOids::JSONOID => Oid::Jsonoid,
            PgBuiltInOids::XMLOID => Oid::Xmloid,
            PgBuiltInOids::PGNODETREEOID => Oid::Pgnodetreeoid,
            PgBuiltInOids::PGNDISTINCTOID => Oid::Pgndistinctoid,
            PgBuiltInOids::PGDEPENDENCIESOID => Oid::Pgdependenciesoid,
            PgBuiltInOids::PGMCVLISTOID => Oid::Pgmcvlistoid,
            PgBuiltInOids::PGDDLCOMMANDOID => Oid::Pgddlcommandoid,
            PgBuiltInOids::XID8OID => Oid::Xid8oid,
            PgBuiltInOids::POINTOID => Oid::Pointoid,
            PgBuiltInOids::LSEGOID => Oid::Lsegoid,
            PgBuiltInOids::PATHOID => Oid::Pathoid,
            PgBuiltInOids::BOXOID => Oid::Boxoid,
            PgBuiltInOids::POLYGONOID => Oid::Polygonoid,
            PgBuiltInOids::LINEOID => Oid::Lineoid,
            PgBuiltInOids::FLOAT4OID => Oid::Float4oid,
            PgBuiltInOids::FLOAT8OID => Oid::Float8oid,
            PgBuiltInOids::UNKNOWNOID => Oid::Unknownoid,
            PgBuiltInOids::CIRCLEOID => Oid::Circleoid,
            PgBuiltInOids::CASHOID => Oid::Cashoid,
            PgBuiltInOids::MACADDROID => Oid::Macaddroid,
            PgBuiltInOids::INETOID => Oid::Inetoid,
            PgBuiltInOids::CIDROID => Oid::Cidroid,
            PgBuiltInOids::MACADDR8OID => Oid::Macaddr8oid,
            PgBuiltInOids::ACLITEMOID => Oid::Aclitemoid,
            PgBuiltInOids::BPCHAROID => Oid::Bpcharoid,
            PgBuiltInOids::VARCHAROID => Oid::Varcharoid,
            PgBuiltInOids::DATEOID => Oid::Dateoid,
            PgBuiltInOids::TIMEOID => Oid::Timeoid,
            PgBuiltInOids::TIMESTAMPOID => Oid::Timestampoid,
            PgBuiltInOids::TIMESTAMPTZOID => Oid::Timestamptzoid,
            PgBuiltInOids::INTERVALOID => Oid::Intervaloid,
            PgBuiltInOids::TIMETZOID => Oid::Timetzoid,
            PgBuiltInOids::BITOID => Oid::Bitoid,
            PgBuiltInOids::VARBITOID => Oid::Varbitoid,
            PgBuiltInOids::NUMERICOID => Oid::Numericoid,
            PgBuiltInOids::REFCURSOROID => Oid::Refcursoroid,
            PgBuiltInOids::REGPROCEDUREOID => Oid::Regprocedureoid,
            PgBuiltInOids::REGOPEROID => Oid::Regoperoid,
            PgBuiltInOids::REGOPERATOROID => Oid::Regoperatoroid,
            PgBuiltInOids::REGCLASSOID => Oid::Regclassoid,
            PgBuiltInOids::REGCOLLATIONOID => Oid::Regcollationoid,
            PgBuiltInOids::REGTYPEOID => Oid::Regtypeoid,
            PgBuiltInOids::REGROLEOID => Oid::Regroleoid,
            PgBuiltInOids::REGNAMESPACEOID => Oid::Regnamespaceoid,
            PgBuiltInOids::UUIDOID => Oid::Uuidoid,
            PgBuiltInOids::LSNOID => Oid::Lsnoid,
            PgBuiltInOids::TSVECTOROID => Oid::Tsvectoroid,
            PgBuiltInOids::GTSVECTOROID => Oid::Gtsvectoroid,
            PgBuiltInOids::TSQUERYOID => Oid::Tsqueryoid,
            PgBuiltInOids::REGCONFIGOID => Oid::Regconfigoid,
            PgBuiltInOids::REGDICTIONARYOID => Oid::Regdictionaryoid,
            PgBuiltInOids::JSONBOID => Oid::Jsonboid,
            PgBuiltInOids::JSONPATHOID => Oid::Jsonpathoid,
            PgBuiltInOids::TXID_SNAPSHOTOID => Oid::TxidSnapshotoid,
            PgBuiltInOids::PG_SNAPSHOTOID => Oid::PgSnapshotoid,
            PgBuiltInOids::INT4RANGEOID => Oid::Int4rangeoid,
            PgBuiltInOids::NUMRANGEOID => Oid::Numrangeoid,
            PgBuiltInOids::TSRANGEOID => Oid::Tsrangeoid,
            PgBuiltInOids::TSTZRANGEOID => Oid::Tstzrangeoid,
            PgBuiltInOids::DATERANGEOID => Oid::Daterangeoid,
            PgBuiltInOids::INT8RANGEOID => Oid::Int8rangeoid,
            PgBuiltInOids::RECORDOID => Oid::Recordoid,
            PgBuiltInOids::RECORDARRAYOID => Oid::Recordarrayoid,
            PgBuiltInOids::CSTRINGOID => Oid::Cstringoid,
            PgBuiltInOids::ANYOID => Oid::Anyoid,
            PgBuiltInOids::ANYARRAYOID => Oid::Anyarrayoid,
            PgBuiltInOids::VOIDOID => Oid::Voidoid,
            PgBuiltInOids::TRIGGEROID => Oid::Triggeroid,
            PgBuiltInOids::EVTTRIGGEROID => Oid::Evttriggeroid,
            PgBuiltInOids::LANGUAGE_HANDLEROID => Oid::LanguageHandleroid,
            PgBuiltInOids::INTERNALOID => Oid::Internaloid,
            PgBuiltInOids::ANYELEMENTOID => Oid::Anyelementoid,
            PgBuiltInOids::ANYNONARRAYOID => Oid::Anynonarrayoid,
            PgBuiltInOids::ANYENUMOID => Oid::Anyenumoid,
            PgBuiltInOids::FDW_HANDLEROID => Oid::FdwHandleroid,
            PgBuiltInOids::INDEX_AM_HANDLEROID => Oid::IndexAmHandleroid,
            PgBuiltInOids::TSM_HANDLEROID => Oid::TsmHandleroid,
            PgBuiltInOids::TABLE_AM_HANDLEROID => Oid::TableAmHandleroid,
            PgBuiltInOids::ANYRANGEOID => Oid::Anyrangeoid,
            PgBuiltInOids::ANYCOMPATIBLEOID => Oid::Anycompatibleoid,
            PgBuiltInOids::ANYCOMPATIBLEARRAYOID => Oid::Anycompatiblearrayoid,
            PgBuiltInOids::ANYCOMPATIBLENONARRAYOID => Oid::Anycompatiblenonarrayoid,
            PgBuiltInOids::ANYCOMPATIBLERANGEOID => Oid::Anycompatiblerangeoid,
            oid => error!("OID not supported {:?}", oid),
        }
    }
}

impl From<pgx::PgOid> for Oid {
    fn from(oid: PgOid) -> Self {
        match oid {
            PgOid::BuiltIn(built_in) => Self::from(built_in),
            PgOid::Custom(_) => Self::from(PgBuiltInOids::ANYOID),
            PgOid::InvalidOid => error!("Invalid Oid"),
        }
    }
}
